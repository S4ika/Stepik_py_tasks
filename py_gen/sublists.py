# Подсписок — часть другого списка. Подсписок может содержать один элемент,
# несколько или даже ни одного. Например, [1], [2], [3] и [4] — подсписки списка [1, 2, 3, 4].
# Список [2, 3] — подсписок списка [1, 2, 3, 4], но список [2, 4] не подсписок списка [1, 2, 3, 4],
# так как элементы 2 и 4 во втором списке не смежные (т.к. они разрываются элементом 3).
# Пустой список — подсписок любого списка.
# Сам список — подсписок самого себя, то есть список [1, 2, 3, 4] подсписок списка [1, 2, 3, 4].
#
# На вход программе подается строка текста, содержащая символы.
# Из данной строки формируется список. Напишите программу, которая выводит список,
# содержащий все возможные подсписки списка, включая пустой список.
#
# Формат входных данных
# На вход программе подается строка текста, содержащая символы, отделенные символом пробела.
#
# Формат выходных данных
# Программа должна вывести указанный список, содержащий все возможные подсписки, включая пустой список в соответствии с примерами.
#
# Примечание. Порядок списков одинаковой длины должен соответствовать порядку их вхождения в основной список.


def sublists(spisok) -> list:
    res = [[]]
    # spisok_list = list(map(list,spisok))
    # res.extend(spisok_list)

    for i in range(len(spisok)):
        t = []
        k = 0
        while k < len(spisok):
            t.append(spisok[k])
            k += 1
            if len(t) == i + 1:
                res.append(t)
                t = []
                k -= i
    return res


def run():
    spisok = input().split()
    print(sublists(spisok))

run()
